package ${package.Controller};

import com.alibaba.fastjson.JSONObject;
import com.wuage.Result.ApiResult;
import com.wuage.Result.ResultCode;
import com.wuage.annotation.RepeatSubmit;
import com.wuage.entity.${entity};
import com.wuage.service.${table.serviceName};
import com.wuage.entity.Vo.PageInfo;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.*;

import javax.validation.constraints.NotNull;
import java.util.List;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
    public class ${table.controllerName} extends ${superControllerClass} {
    #else
    public class ${table.controllerName} {
    #end

            private ${table.serviceName} ${table.entityPath}Serivce;

            @Autowired
            public ${table.controllerName}( ${table.serviceName} ${table.entityPath}Serivce){
                this.${table.entityPath}Serivce =  ${table.entityPath}Serivce;


            }


            /**
            * 列表查询
            * @param pageInfo
            * @return
            * @throws Exception
            */
            @RequiresPermissions("system:${table.entityPath}:view")
            @GetMapping("/${table.entityPath}")
            public ApiResult get${entity}s(PageInfo pageInfo) throws Exception {



                    List<${entity}> ${entity}s = ${table.entityPath}Serivce.get${entity}s(pageInfo);
                    JSONObject json = new JSONObject();
                    json.put(" ${entity}", ${entity}s);


                    return new ApiResult(ResultCode.SUCCESS, json);

            }

            /**
            * 添加$!{table.comment}
            * @param
            * @return
            * @throws Exception
            */
            @RepeatSubmit
            @PostMapping("/${table.entityPath}")
            @RequiresPermissions("system:${table.entityPath}:add")
            public ApiResult add(@Validated ${entity} ${table.entityPath}) throws Exception {


                        return  ${table.entityPath}Serivce.add${entity}(${table.entityPath});

            }

            /**
            * 删除$!{table.comment}
            * @param
            * @return
            * @throws Exception
            */
            @DeleteMapping("/${table.entityPath}/${table.entityPath}Id}")
            @RequiresPermissions("system:${table.entityPath}:delete")
            public ApiResult delete(@PathVariable @NotNull Integer ${table.entityPath}Id) throws Exception {

                    return ${table.entityPath}Serivce.delete${entity}(${table.entityPath}Id);

            }

            /**
            * 更新$!{table.comment}
            * @param
            * @return
            * @throws Exception
            */
            @RepeatSubmit
            @PutMapping("/${table.entityPath}/")
            @RequiresPermissions("system:${table.entityPath}:update")
            public ApiResult update(${entity} ${table.entityPath}) throws Exception {

                    return ${table.entityPath}Serivce.update${entity} (${table.entityPath});
            }


        }

#end











